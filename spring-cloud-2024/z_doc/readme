mysql:
jdbc.driverClass=com.mysql.cj.jdbc.Driver
jdbc.url=jdbc:mysql://192.168.137.110:3306/cloud_2024?characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true
jdbc.user=root
jdbc.password=root
启动：mysql -uroot -p（已配置自启动）

redis:
host: 192.168.137.110
port: 6379
启动：/usr/local/tools/redis/bin/redis-server /usr/local/tools/redis/bin/redis.conf
访问：Redis Insight软件查看数据

kafka:
bootstrap-servers: 192.168.137.110:9092
启动：
/app/tools/kafka_2.12-3.9.1/bin/kafka-server-start.sh /app/tools/kafka_2.12-3.9.1/config/server.properties
访问： idea plugins配置后查看


Consul:
D:\2025\java\software\SpringCloud\consul_1.17.1_windows_386
启动：
file:///D:/2025/java/software/SpringCloud/consul_1.17.1_windows_386/consul_start.bat
@echo.服务启动......
@echo off
@sc create Consul binpath= "D:\2025\java\software\SpringCloud\consul_1.17.1_windows_386\consul.exe agent -server -ui -bind=127.0.0.1 -client=0.0.0.0 -bootstrap-expect  1  -data-dir D:\2025\java\software\SpringCloud\consul_1.17.1_windows_386\mydata   "
@net start Consul
@sc config Consul start= AUTO
@echo.Consul start is OK......success
@pause
访问： http://localhost:8500/

Zipkin:
D:\2025\java\software\SpringCloud\zipkin-server-3.0.0-rc0-exec
启动：java -jar zipkin-server-3.0.0-rc0-exec.jar
访问：http://localhost:9411/

Nacos:
D:\2025\java\software\SpringCloud\nacos-server2.2.3\bin
启动：startup.cmd -m standalone
访问：http://localhost:8848/nacos/   nacos/nacos


Sentinel:
启动：D:\2025\java\software\SpringCloud\sentinel-dashboard-1.8.6>java -jar sentinel-dashboard-1.8.6.jar
访问：http://localhost:8080/#/dashboard       sentinel/sentinel
后台默认端口8719

seata:
启动： D:\2025\java\software\SpringCloud\seata-server-2.0.0\bin\seata-server.bat
访问： http://localhost:7091/#/transaction/list  seata/seata




测试：
1. 启动consul + zipkin
MainOpenFeign80 :80/
PaymentMain8001 :8001/
PaymentMain8002 :8002/
PaymentMain8003 :8003/
GatewayMain9527 :9527/

测试 consul + feign + gateway + loadbalancer
1. http://localhost:80/feign/pay/info   -- 可以测试gateway网关，feign远程调用，load balancer 负载均衡
  1.1 找到cloud-gateway  --》 /pay/info;
  1.2 到cloud-gateway服务，配置了route:pay_routh3，所有请求转到cloud-payment-service
  1.3 最终找到cloud-payment-service --》 com.ityj.cloud.controller.PaymentController.info

2.http://localhost/feign/pay/get/1    -- 测试feign的超时重试


Resilient4j 熔断降级、隔离、限流测试
1.
